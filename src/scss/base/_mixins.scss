@mixin tablet {
  @media all and (min-width: $tablet-breakpoint) {
    @content;
  }
}

@mixin small-desktop {
  @media all and (min-width: $small-desktop-breakpoint) {
    @content;
  }
}

@mixin desktop {
  @media all and (min-width: $desktop-breakpoint) {
    @content;
  }
}

@mixin gap($gap) {
  // scss-lint:disable PropertySpelling
  gap: $gap;
  // scss-lint:enable PropertySpelling
}

// Triangle helper mixin
// @param {Direction} $direction - Triangle direction, either `top`, `right`, `bottom` or `left`
// @param {Color} $color [currentcolor] - Triangle color
// @param {Length} $size [1em] - Triangle size
@mixin triangle($direction, $color: currentcolor, $size: 5px) {
  @if not index(top right bottom left, $direction) {
    @error 'Direction must be either `top`, `right`, `bottom` or `left`.';
  }

  width: 0;
  height: 0;
  content: '';
  z-index: 2;
  border-#{opposite-direction($direction)}: ($size * 1.5) solid $color;

  $perpendicular-borders: $size solid transparent;

  @if $direction == top or $direction == bottom {
    border-left: $perpendicular-borders;
    border-right: $perpendicular-borders;
  } @else if $direction == right or $direction == left {
    border-bottom: $perpendicular-borders;
    border-top: $perpendicular-borders;
  }
}

// Returns the opposite direction of each direction in a list
// @author Kitty Giraudel
// @param {List} $directions - List of initial directions
// @return {List} - List of opposite directions
@function opposite-direction($directions) {
  $opposite-directions: ();
  $direction-map: (
    'top': 'bottom',
    'right': 'left',
    'bottom': 'top',
    'left': 'right',
    'center': 'center',
    'ltr': 'rtl',
    'rtl': 'ltr'
  );

  @each $direction in $directions {
    $direction: to-lower-case($direction);

    @if map-has-key($direction-map, $direction) {
      $opposite-directions: append($opposite-directions, unquote(map-get($direction-map, $direction)));
    } @else {
      @warn 'No opposite direction can be found for `#{$direction}`. Direction omitted.';
    }
  }

  @return $opposite-directions;
}

@function zindex($element) {
  $multiplier: 5;
  $z-index: index($zindex-list, $element);

  @if $z-index {
    @return $z-index * $multiplier;
  }

  @warn 'There is no item `#{$element}` in this list; choose one of: #{$zindex-list}';
  @return null;
}
